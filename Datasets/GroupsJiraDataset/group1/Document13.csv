id,love,joy,surprise,anger,sadness,fear,notes,comment N,comment N-1,comment N-2,...,comment 2,comment1,,,,,,,,
8813,,,,,,,,checked in,,,,,,,,,,,,,
44965,,,,,,,,TagSoup 1.2.1 is finally available; so in revision 1160599 I upgraded the dependency and removed the earlier workaround.,I posted again to tagsoup-friends; asking for a release with this fix included. See https://groups.google.com/forum/?pli=1#!topic/tagsoup-friends/Tb7OvGPzKCA,I came up with a fairly simple patch [1] that seems to solve this. I'll see what we can do to push out an official release with this fix. [1] http://github.com/jukka/tagsoup/commit/9cfe7b48745173faafa419f540538a0b6309b699,Here are some related posts to the tagsoup user groups: http://groups.google.com/group/tagsoup-friends/browse_thread/thread/751d271c107a24a9# http://webcache.googleusercontent.com/search?q=cache:M2F_jS2hLVwJ:tech.groups.yahoo.com/group/tagsoup-friends/message/1250+%22Yes;+it+should+be+handled+%28and+returned+as+a+raw+%26;+to+be+escaped%22+on+output+as+%26amp%3B&cd=1&hl=en&ct=clnk&gl=us Evidently the bug occurs when the document contains a sequence of '&' followed by [CR]. When all CRs are transliterated to LFs then TagSoup runs properly. As tagsoup has no official bug tracking or release tracking system there is no way to know when this bug would be fixed. That is why I'm submitting it here as it is causing a bug in apache tika.,,,,,,,,,,
80577,,,,,,,,Test log,,,,,,,,,,,,,
59054,,,,x,,,,The aborted build for hadoop 100 profile seems to be some sort of Jenkins issue.,,,,,,,,,,,,,
45651,,x,,,,,,Integrated in Thrift #533 (See https://builds.apache.org/job/Thrift/533/) Thrift-1701:node.js TBufferedTransport buffer corruption Patch: Marshall Roch fix buffer copy method calls (Revision 1389517) Result = SUCCESS,I think you have a good point and I'm committing it but it unfortunately doesn't fix the TBufferedTransport. e.g. thrift/test/nodejs$ timeout 2 make server & sleep 1; make client only runs one or two tests before stopping/crashing when using TBufferedTransport.,,,,,,,,,,,,
24531,,,,,,,,Changed the site to include the incubator disclaimer and incubator logo.,1) only required on the main page 2) near the beginning; so it is prominent 3) That's the Apache Sponsor; which is usually Incubator. For example: http://incubator.apache.org/npanday/,I have a few questions: 1. Where exactly do you want this disclaimer? Only on the main page; or on every page? 2. Is there some preferred location for disclaimer? 3. The disclaimer test mentions: 'Apache 'Podling-Name' is an effort undergoing incubation at The Apache Software Foundation (ASF); sponsored by the name of sponsor. What should be substituted for sponsor? Basically; the code was donated by Google; does it mean that it makes Google the sponsor?,,,,,,,,,,,
1725,,,,,,,,3.0.0 has been released; closing issues.,,,,,,,,,,,,,
57081,,,,,,,,Closing as fixed.,,,,,,,,,,,,,
34335,,,,,,x,,From today's IRC discussion: will drop out of M1 if not in place by May 8th.,This was something Jeremy was working on. I'm happy to help out but I'm moving it to his bucket since he was doing the work,,,,,,,,,,,,
75082,,,,,,,,I intend to close this issue as fixed in a week's time. Please post your comments if you're able to test by then.,,,,,,,,,,,,,
23248,,,,,,,,Fixed in trunk (r555005).,,,,,,,,,,,,,
37179,,,,,,,,Patch over 1.2.12.3 branch.,Code review comments addressed.,Patch over Trinidad trunk.,,,,,,,,,,,
398,,,,,,,,+1 overall. Here are the results of testing the latest attachment http://issues.apache.org/jira/secure/attachment/12509655/patch.txt against trunk revision 1227927. +1 @author. The patch does not contain any @author tags. +1 tests included. The patch appears to include 3 new or modified tests. +1 javadoc. The javadoc tool did not generate any warning messages. +1 javac. The applied patch does not increase the total number of javac compiler warnings. +1 findbugs. The patch does not introduce any new Findbugs (version 1.3.9) warnings. +1 release audit. The applied patch does not increase the total number of release audit warnings. +1 core tests. The patch passed core unit tests. +1 contrib tests. The patch passed contrib unit tests. Test results: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/882//testReport/ Findbugs warnings: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/882//artifact/trunk/build/test/findbugs/newPatchFindbugsWarnings.html Console output: https://builds.apache.org/job/PreCommit-ZOOKEEPER-Build/882//console This message is automatically generated.,,,,,,,,,,,,,
71565,,,,,,,,It seems that this enhancement is atm out of scope for Sling - therefore closing this bug.,,,,,,,,,,,,,
38797,,,,,,,,home page fixed in svn.,,,,,,,,,,,,,
70682,,,,,,,,Close after release,,,,,,,,,,,,,
14206,,,,,,,,Ported the solution of WW-2551 to the Struts 2.0 branch.,This bug is the same of WW-2551; but it was not backported to Struts 2.0 branch.,Finally we have a test case! See the attachment at TILES-278.,I've confirmed that this issue is still present in Struts 2.1.1 The flush attribute of s:action has no impact on the tiles result. Unlike the tiles:insertDefintion tag that includes a flush attribute; the TilesResult always flushes. Recommendation: add a boolean flush parameter to TilesResult (default true) When false; a tiles result can then be rendered within the page of another result using s:action.,,,,,,,,,,
22097,,,,,,,,seems like all subtask as resolved,kitten captcha is intended for inclusion into Wicket; and is attached for ip-clearance.,,,,,,,,,,,,
1671,,,,,,,,Integrated in ZooKeeper-trunk #271 (See http://hudson.zones.apache.org/hudson/job/ZooKeeper-trunk/271/),,,,,,,,,,,,,
32084,,,,x,,,,Closing because this has been in RESOLVED state for over one year; if it turns out to not be fixed please reopen.,Fixed under r684136,,,,,,,,,,,,
11149,,,,,x,,,I wasn't able to reproduce the problem with the attachments. I saw appropriate error messages; line numbers; etc. However; line number information was missing for the testcase idkeyerr10; so I've committed a patch which remedies this.,,,,,,,,,,,,,
38592,,,,,,,,in branch,,,,,,,,,,,,,
27475,,,,,x,,,svn ci -m 'Fixing ArrayOutOfBoundsException bug reported in # VALIDATOR-202. This fix is pretty simple - 'Create an array of size # of .s plus one'; but the implementation of that isn't very beautiful. ' Sending src/share/org/apache/commons/validator/UrlValidator.java Sending src/test/org/apache/commons/validator/UrlTest.java Transmitting file data .. Committed revision 453308.,,,,,,,,,,,,,
81122,,,,,,,,Committed to 0.18 branch r1366206,,,,,,,,,,,,,
64316,,,,,,x,,This bug was modified as part of a bulk update using the criteria... Marked ('Resolved' or 'Closed') and 'Fixed' Had no 'Fix Version' versions Was listed in the CHANGES.txt for 1.2 The Fix Version for all 39 issues found was set to 1.2; email notification was suppressed to prevent excessive email. For a list of all the issues modified; search jira comments for this (hopefully) unique string: 20080415hossman2,committed.,tested on an AMD opteron; 64 bit mode; Java5 -server -Xbatch and exists() was 8.5% faster; intersectionSize() was 7% faster. I didn't bother testing union(); andNot(); as they are obviously going to be much faster.,The performance tests are commented out in the TestDocSet test... I had other changes in my tree related to negative queries and only selected the two source files for diffs. I had quickly tested Java5 to make sure it was still faster in all instances; and it was. Numbers were about the same; some speedups larger and some smaller than Java6.,quick questions... 1) what test did you run to get those numbers? ... even if we don't commit it; we should attach it to this Jira issue 2) we should probably test at least the Sun 1.5 JVM as well right?,Performance results: HashDocSet.exists() is 13% faster HashDocSet.intersectionSize() is thus 9% faster HashDocSet.union() is 20 times faster HashDocSet.andNot() is 27 times faster Tested with Sun JDK6 -server on a P4,,,,,,,,
48151,,,,,,,,Duplicate of TAPESTRY-1988.,Someone else did better research than me ...,My investigation has shown that this is necessary; that the servlet container does not perform the decoding automatically. I just hope this isn't a Tomcat vs. Jetty issue!,At first I put this down to a misunderstanding on my part of the servlet API. However; when I remove the explicit URL decoding logic; existing tests break. Specifically; tests for cases where there are URL encoded characters inside the context. These are Selenium tests; which means that the full servlet API stack from Jetty; unchanged; is in charge ... and that brings into question the thought that it is servlet containers job to URL decode.,,,,,,,,,,
19241,,,,,,,,I applied the patch. I'll experiment soon with another approach whether a page is stateless based on the generation of a callback url to that page. If there is at least one callback url to a page then it is stateful. It will be tracked in a different ticket. The last patch will stay even if the new approach works because it is a good optimization.,will probably need a unit test as well to make sure we dont break this in the future,Here is a simple patch that doesn't check whether a page is stateless before touching it because the page itself comes from the store; so there is a session already.,fix for this breaks wicket-cdi. imagine a component that is visible only if the user is logged in. to do this it overrides onconfigure() { setvisible(logins.getcurrentuser()!=null); } where logins is a cdi bean. Page#isPageStateless() is called as soon as the page is pulled from the page store; which means now onconfigure() is called when wicket cdi retrieves the page instance and before it is able to figure out what conversation to wrap the page in. {code} org.jboss.weld.context.ContextNotActiveException: WELD-001303 No active contexts for scope type javax.enterprise.context.ConversationScoped åÊåÊåÊåÊåÊåÊåÊåÊat org.jboss.weld.manager.BeanManagerImpl.getContext(BeanManagerImpl.java:664) åÊåÊåÊåÊåÊåÊåÊåÊat org.jboss.weld.bean.proxy.ContextBeanInstance.getInstance(ContextBeanInstance.java:77) åÊåÊåÊåÊåÊåÊåÊåÊat org.jboss.weld.bean.proxy.ProxyMethodHandler.invoke(ProxyMethodHandler.java:124) åÊåÊåÊåÊåÊåÊåÊåÊat xxx.dao.UserLogManager.findLoggedInUser(UserLogManager.java:122) åÊåÊåÊåÊåÊåÊåÊåÊat xxx.security.WeldUserFactories.getLoggedInUser(WeldUserFactories.java:67) åÊåÊåÊåÊåÊåÊåÊåÊat xxx.security.WeldUserFactories.getLoggedInAdmin(WeldUserFactories.java:226) åÊåÊåÊåÊåÊåÊåÊåÊat xxx.security.WeldUserFactories.getCurrentUser(WeldUserFactories.java:239) åÊåÊåÊåÊåÊåÊåÊåÊat xxx.lms.frontend.template.FrontEndTemplate$LogoutLink.isVisible(FrontEndTemplate.java:725) åÊåÊåÊåÊåÊåÊåÊåÊat org.apache.wicket.Component.determineVisibility(Component.java:4381) åÊåÊåÊåÊåÊåÊåÊåÊat org.apache.wicket.Component.isVisibleInHierarchy(Component.java:2160) åÊåÊåÊåÊåÊåÊåÊåÊat org.apache.wicket.Component.isStateless(Component.java:2081) åÊåÊåÊåÊåÊåÊåÊåÊat org.apache.wicket.Page$2.component(Page.java:503) åÊåÊåÊåÊåÊåÊåÊåÊat org.apache.wicket.Page$2.component(Page.java:500) åÊåÊåÊåÊåÊåÊåÊåÊat org.apache.wicket.util.visit.Visits.visitChildren(Visits.java:143) åÊåÊåÊåÊåÊåÊåÊåÊat org.apache.wicket.util.visit.Visits.visitChildren(Visits.java:161) åÊåÊåÊåÊåÊåÊåÊåÊat org.apache.wicket.util.visit.Visits.visitChildren(Visits.java:122) åÊåÊåÊåÊåÊåÊåÊåÊat org.apache.wicket.MarkupContainer.visitChildren(MarkupContainer.java:866) åÊåÊåÊåÊåÊåÊåÊåÊat org.apache.wicket.Page.isPageStateless(Page.java:498) åÊåÊåÊåÊåÊåÊåÊåÊat org.apache.wicket.page.AbstractPageManager.touchPage(AbstractPageManager.java:123) åÊåÊåÊåÊåÊåÊåÊåÊat org.apache.wicket.page.AbstractPageManager.getPage(AbstractPageManager.java:105) åÊåÊåÊåÊåÊåÊåÊåÊat org.apache.wicket.page.PageManagerDecorator.getPage(PageManagerDecorator.java:50) åÊåÊåÊåÊåÊåÊåÊåÊat org.apache.wicket.page.PageAccessSynchronizer$2.getPage(PageAccessSynchronizer.java:257) åÊåÊåÊåÊåÊåÊåÊåÊat org.apache.wicket.DefaultMapperContext.getPageInstance(DefaultMapperContext.java:117) åÊåÊåÊåÊåÊåÊåÊåÊat org.apache.wicket.request.handler.PageProvider.getStoredPage(PageProvider.java:292) åÊåÊåÊåÊåÊåÊåÊåÊat org.apache.wicket.request.handler.PageProvider.hasPageInstance(PageProvider.java:380) åÊåÊåÊåÊåÊåÊåÊåÊat org.apache.wicket.request.handler.RenderPageRequestHandler.isPageInstanceCreated(RenderPageRequestHandler.java:181) åÊåÊåÊåÊåÊåÊåÊåÊat net.ftlines.wicket.cdi.ConversationPropagator.getPage(ConversationPropagator.java:261) åÊåÊåÊåÊåÊåÊåÊåÊat net.ftlines.wicket.cdi.ConversationPropagator.onRequestHandlerResolved(ConversationPropagator.java:111) åÊåÊåÊåÊåÊåÊåÊåÊat org.apache.wicket.request.cycle.RequestCycleListenerCollection$5.notify(RequestCycleListenerCollection.java:145) åÊåÊåÊåÊåÊåÊåÊåÊat org.apache.wicket.request.cycle.RequestCycleListenerCollection$5.notify(RequestCycleListenerCollection.java:142) åÊåÊåÊåÊåÊåÊåÊåÊat org.apache.wicket.util.listener.ListenerCollection.notify(ListenerCollection.java:80) åÊåÊåÊåÊåÊåÊåÊåÊat org.apache.wicket.request.cycle.RequestCycleListenerCollection.onRequestHandlerResolved(RequestCycleListenerCollection.java:141) åÊåÊåÊåÊåÊåÊåÊåÊat org.apache.wicket.request.cycle.RequestCycleListenerCollection$5.notify(RequestCycleListenerCollection.java:145) åÊåÊåÊåÊåÊåÊåÊåÊat org.apache.wicket.request.cycle.RequestCycleListenerCollection$5.notify(RequestCycleListenerCollection.java:142) åÊåÊåÊåÊåÊåÊåÊåÊat org.apache.wicket.util.listener.ListenerCollection.notify(ListenerCollection.java:80) åÊåÊåÊåÊåÊåÊåÊåÊat org.apache.wicket.request.cycle.RequestCycleListenerCollection.onRequestHandlerResolved(RequestCycleListenerCollection.java:141) åÊåÊåÊåÊåÊåÊåÊåÊat org.apache.wicket.request.cycle.RequestCycleListenerCollection$5.notify(RequestCycleListenerCollection.java:145) åÊåÊåÊåÊåÊåÊåÊåÊat org.apache.wicket.request.cycle.RequestCycleListenerCollection$5.notify(RequestCycleListenerCollection.java:142) åÊåÊåÊåÊåÊåÊåÊåÊat org.apache.wicket.util.listener.ListenerCollection.notify(ListenerCollection.java:80) åÊåÊåÊåÊåÊåÊåÊåÊat org.apache.wicket.request.cycle.RequestCycleListenerCollection.onRequestHandlerResolved(RequestCycleListenerCollection.java:141) åÊåÊåÊåÊåÊåÊåÊåÊat org.apache.wicket.request.cycle.RequestCycle.execute(RequestCycle.java:254) åÊåÊåÊåÊåÊåÊåÊåÊat org.apache.wicket.request.cycle.RequestCycle.processRequest(RequestCycle.java:212) åÊåÊåÊåÊåÊåÊåÊåÊat org.apache.wicket.request.cycle.RequestCycle.processRequestAndDetach(RequestCycle.java:283) åÊåÊåÊåÊåÊåÊåÊåÊat org.apache.wicket.protocol.http.WicketFilter.processRequest(WicketFilter.java:185) åÊåÊåÊåÊåÊåÊåÊåÊat org.apache.wicket.protocol.http.WicketFilter.doFilter(WicketFilter.java:241) {code},,,,,,,,,,
37778,,,,,,,,The call to launchDialog must supply a component for delivery of the returnListener event. This bug is invalid.,,,,,,,,,,,,,
65088,,,,,,,,The fix for SMXCOMP-759 also resolve this issue,,,,,,,,,,,,,
21128,x,,,,,,,thanks,,,,,,,,,,,,,
12989,,,,,,,,Already resolved with WW-3414,,,,,,,,,,,,,
31347,,,,x,,,,This has been in RESOLVED state for over one year so now closing; if it turns out to not be fixed please re-open.,,,,,,,,,,,,,
19423,,,,,,,,Attached QuickStart. Access URL is https://localhost:8443/test/ajaxtest - click on the buttons several times - refresh page: the counters should now reflect the clicks - click on the buttons more times - refresh page: the counters do not reflect click after first refresh,,,,,,,,,,,,,
71371,,,,,,,,Tested this fix with two servlet containers (Jetty and Day Servlet Engine) as well as with Firefox 2 on Linux and Windows and Firefox 3 (Windows); IE6 (Windows) and Safari (Windows). Provided the data is submitted as a multipart/form-data POST request; the form data is correctly encoded and may be used for further perusal. Considering this issue fix.,,,,,,,,,,,,,
7577,,,,,,,,patch in cvs. Could you please verify?,,,,,,,,,,,,,
12310,x,,,,,,,Very cool. Thank you.,,,,,,,,,,,,,
45473,,,,,,,,Integrated in Thrift #633 (See https://builds.apache.org/job/Thrift/633/) THRIFT-1879 Add support for GObject-Introspection (Revision a51186b7f2bd388d95485404017f05eb3b861074) Result = ABORTED roger : https://git-wip-us.apache.org/repos/asf?p=thrift.git&a=commit&h=a51186b7f2bd388d95485404017f05eb3b861074 Files : lib/c_glib/src/thrift/c_glib/transport/thrift_transport.h lib/c_glib/src/thrift/c_glib/server/thrift_simple_server.h lib/c_glib/src/thrift/c_glib/transport/thrift_buffered_transport.h lib/c_glib/src/thrift/c_glib/transport/thrift_framed_transport.h lib/c_glib/src/thrift/c_glib/protocol/thrift_protocol_factory.h lib/c_glib/src/thrift/c_glib/protocol/thrift_binary_protocol_factory.h lib/c_glib/src/thrift/c_glib/transport/thrift_server_socket.h lib/c_glib/src/thrift/c_glib/protocol/thrift_binary_protocol.h lib/c_glib/src/thrift/c_glib/server/thrift_server.h lib/c_glib/src/thrift/c_glib/transport/thrift_transport_factory.h lib/c_glib/src/thrift/c_glib/transport/thrift_server_transport.h lib/c_glib/src/thrift/c_glib/thrift_application_exception.h lib/c_glib/src/thrift/c_glib/transport/thrift_memory_buffer.h lib/c_glib/src/thrift/c_glib/transport/thrift_socket.h lib/c_glib/src/thrift/c_glib/protocol/thrift_protocol.h lib/c_glib/src/thrift/c_glib/thrift_struct.h,,,,,,,,,,,,,
20968,,,,,,,,Integrated in Apache Wicket 1.5.x #54 (See [http://hudson.zones.apache.org/hudson/job/Apache%20Wicket%201.5.x/54/]) åÊåÊåÊåÊ,,,,,,,,,,,,,
62999,,,,,,,,@Noble Paul I cooked something resembling a backport here SOLR-3079,,,,,,,,,,,,,
60365,,,,,,,,Fix committed as part of SOLR-4134.,,,,,,,,,,,,,
29394,,,,,,x,,Closing this issue - if more needs to be done; maybe it would be better to open an new issue - this one has gotten rather large,,,,,,,,,,,,,
7380,,,,,x,,,As a work around; I scan the XML document to locate the namespaces which are then compared against a look-up file to see which schemas to load in the grammar. The only reason this was done is because DOMEntityResolver did not trigger for all namespaces. I am using version 2.7 and the option to trigger on all namespaces would be useful.,,,,,,,,,,,,,
81302,,,,,,,,Changes merged to the 0.16 branch; updating the fix-for version accordingly.,,,,,,,,,,,,,
19722,,,,,,,,Just an idea: how about treating a jar as versioned resource? For example in my case that would work beautifully: my star rating component was in its own jar file; so everything would have the same version somewhere above; and all the relative URLs would resolve just fine. Since jar is pretty much invisible at runtime maybe we can have some version marker inside package; and then version in the URL can be at the level; so all other relative URLs inside package would work fine below that level. That might make sense for other cases: for example a skin for application where bunch of images and css and scripts can be packaged.,Technically a resource is something that responds to a request with some kind of response to the client. A package is just a virtual location represented by a file system folder or a jar file location. So it should be treated differently from a resource. But I could imagine it makes sense to support urlFor(...) to resolve a package location. However this has to be discussed first and will not happen before 1.5.0 since we are almost gone final.,some obsolete documentation - thanks for the pointer :-),Oh; and if possible the change need to be better communicated/hinted in the documentation because dr. Google and wiki documentation point at the timestamp approach https://cwiki.apache.org/WICKET/caching-in-wicket-15.html,I think supporting package as a resource makes a lot of sense because it is widely used practice to lookup additional resources like images and css files based on 'root' location.,not pretty but working: String url = urlFor(new ResourceReference(StarRatingPanel.class; 'img') { @Override public IResource getResource() { return new IResource() { @Override public void respond(Attributes attributes) { } }; } }; new PageParameters()).toString(); log.info('url=' + url); Basically it's a kludge to resolve the url to a package location with a resource reference pointing to a non-existant resource. I don't know if a package counts as a resource. Maybe we should add some kind of official support for that?!,Like Martin said; you can use a custom caching strategy. sample ------------- private abstract class CustomResourceCachingStrategy implements IResourceCachingStrategy { private final IResourceCachingStrategy delegate; public CustomResourceCachingStrategy(IResourceCachingStrategy delegate) { this.delegate = delegate; } @Override public void decorateUrl(ResourceUrl url; IStaticCacheableResource resource) { if (shouldCache(resource)) { delegate.decorateUrl(url; resource); } } @Override public void undecorateUrl(ResourceUrl url) { delegate.undecorateUrl(url); } @Override public void decorateResponse(AbstractResource.ResourceResponse response; IStaticCacheableResource resource) { if (shouldCache(resource)) { delegate.decorateResponse(response; resource); } } åÊåÊåÊåÊåÊåÊåÊåÊåÊåÊåÊåÊåÊåÊåÊåÊ// override for your needs e.g. by using a marker interface protected abstract boolean shouldCache(IStaticCacheableResource resource); } and use it like this: final IResourceCachingStrategy delegate = getResourceSettings().getCachingStrategy(); getResourceSettings().setCachingStrategy(new CustomResourceCachingStrategy(delegate));,The resource knows this by implementing IStaticCacheableResource. Create a custom resource that doesn't implement this interface and its url wont be versioned.,This approach makes creates tight coupling with top level entity: CachingStrategy and makes it necessary to use custom strategy. That does not seem to be better than little hint from resource if it participates in the versioning.,I think this is possible with custom caching strategy (see last comment by Peter above). Your custom strategy can do nothing in org.apache.wicket.request.resource.caching.IResourceCachingStrategy.decorateUrl(ResourceUrl; IStaticCacheableResource) for the resources you decide.,The approach implemented is a blanket one - what is removed is the ability to selective remove versioning from a particular resource. I do not need timestamp in particular; but a way to let wicket know that THIS resource should not use versioned URL. IMO this is a valid use case. Please consider returning some sort of marker method to ResourceReference to allow using custom versioning; or no versioning at all.,to manually remove the version dependant part of the url you eventually could use: åÊåÊApplication#getResourceSettings().getCachingStrategy().undecorateUrl(url),PackageResourceReference#getLastModified() was introduced when adding improved caching support for package resources. Recently there was a refactor (https://issues.apache.org/jira/browse/WICKET-3948) to remove some limitations of this approach. PackageResourceReference#getLastModified() became obsolete and was therefore removed. If you really need lastModified() from within PackageResourceReference you can use this (though it's a little inconvenient): åÊåÊPackageResourceReference reference = /* ... */; åÊåÊPackageResource resource = (PackageResource)reference.getResource(); åÊåÊTime lastModified = resource.getResourceStream().lastModifiedTime(); If we get another release candidate for 1.5 I will remove the need for the type-cast. IResourceSettings#setUseTimestampOnResources() has been replace by a more powerful solution. check https://cwiki.apache.org/WICKET/migration-to-wicket-15.html#MigrationtoWicket1.5-getResourceSettings%2528%2529.setAddLastModifiedTimeToResourceReferenceUrl%2528%2529hasbeenreplacedbyIResourceCachingStrategy to get all the details.,åÊval imgUrl = RequestCycle.get().urlFor(new PackageResourceReference(classOf[StarRatingPanel]; 'jquery.raty-1.0.1/img'){ åÊåÊåÊåÊåÊåÊoverride def getLastModified = null//prevent cacheable urls <-- this does not work any more åÊåÊåÊåÊ}; null) åÊåÊåÊåÊresponse.renderJavaScript('$j.fn.raty.defaults.path= '' + imgUrl + '';'; 'raty-images-fix')
68136,,,,,,,,Committed to the 3.2 branch via revision 634707 and to the trunk (3.3) via revision 634714.,,,,,,,,,,,,,
16677,,,,,,,,Property editors may throw a PropertyException with a bundle key and this will then be localized in ActionSupport.,Can we get more specifics here?,,,,,,,,,,,,
42086,x,,,,,,,Thanks to Simon Kitching.,,,,,,,,,,,,,
10261,,,,,,,,I checked that this bug was fixed in version 2.5.2.,,,,,,,,,,,,,
13977,,,,,,,,Assigning this to future until the dependent XWork enhancement is made.,,,,,,,,,,,,,
77769,,,,,,,,Closing resolved but not fixed (i.e.; duplicate; invalid; cannot reproduce; etc.) issues.,,,,,,,,,,,,,
12867,,x,,,,,,Integrated in Struts2 #545 (See https://builds.apache.org/job/Struts2/545/) WW-3881 allows new html input types (Revision 1397712) Result = SUCCESS lukaszlenart : Files : /struts/struts2/trunk/core/src/site/resources/tags/ajax/autocompleter.html,Resolved,I have tested with the latest SNAPSHOT and all is OK now. Thanks for the fix.,Should work with latest SNAPSHOT. Can you please test?,,,,,,,,,,
7665,x,,,,,,,Verified; thanks.,Fix in CVS.,,,,,,,,,,,,
46121,,,,,,,,----------------------------------------------------------- This is an automatically generated e-mail. To reply; visit: https://reviews.apache.org/r/1023/ ----------------------------------------------------------- (Updated 2011-07-08 20:04:37.543693) Review request for Thrift. Changes ------- Adding bug number for tracking. Summary ------- Remove bogus include. TAsyncChannel includes TTransportUtils but doesn't need/use it. This addresses bug THRIFT-1231. https://issues.apache.org/jira/browse/THRIFT-1231 Diffs /lib/cpp/src/async/TAsyncChannel.h 1143615 Diff: https://reviews.apache.org/r/1023/diff Testing ------- make check in lib/cpp Thanks; Diwaker,,,,,,,,,,,,,
58473,,,,,,,,rules/,,,,,,,,,,,,,
78759,x,,,,,,,Fixed; thanks for the patch. http://svn.apache.org/viewcvs.cgi?rev=354520&view=rev,,,,,,,,,,,,,
26572,x,,,,,,,Thanks for testing; Shinobu. Probably a misconfiguration. Chris; try asking on the user list if this problem persists.,,,,,,,,,,,,,
17727,,,,,,,,Verified. I added the info to the RELEASE_NOTES file.,I'm closing this as we aren't planning to implement the only remaining issue. I propose we just add an item to the release notes that we're 99% conformant apart from child iframe support.,WOOKIE-308 is the only remaining issue affecting conformance; we aren't going to fix that for 0.9.2 so I'll re-open this issue and punt to 0.10.0 to fix along with WOOKIE-308,OK; I've checked again and it looks like the WebStorage spec changed or I misinterpreted it: while clear() must remove the entries; getItem() must return Null rather than undefined when requesting a non-existing item: widget.preferences.clear(); // get rid of everything widget.preferences.setItem('foo'; null); // set 'foo' to equal null widget.preferences.getItem('foo'); // tuple exists and is set to null; return null widget.preferences.getItem('completely_undefined_bar'); tuple doesn't exist; return null I've updated Wookie and we can now pass test 'at'. We don't pass 'au' but I'll raise another issue for that.,(commits in the w3c test cases repo; not wookie!),OK; looks like my commits fixing the two tests were reverted; so no wonder at and au fail now. I'll follow that up and see if I can resolve it.,Hmm; I updated the 'at' and 'au' test cases at W3C to check for typeof==='undefined' rather than Null so they shouldn't be failing now...,I have just re-run all these tests on Windows 7; in the following environments... IE 9 Firefox 9.0.1 Opera 11.10 Google Chrome 16.0.912.75 m and the results were the same in each case... Test 'return-empty-strings' fails because widget.id returns wookies internal generated Id (expected behavior for wookie) Test 'setItem-fires-event' fails (storage event from iframe) Test 'removeItem-fires-event' fails (storage event from iframe) Test 'clearItem-fires-event' fails (storage event from iframe) Test 'Test at' fails because widget expects window.widget.preferences.getItem('deletable') to be null. it is actually 'undefined' Test 'au' fails because widget expects prefs.getItem('test1') to be null. it is actually 'undefined' It looks to me that this is in keeping with Scotts results; ok to verifiy now?,So here's the summary: #1 Fixed #2 Not a bug - I think its reasonable we pass on generated ids in the metadata #3 I don't think its really relevant as its an edge case. If anyone asks for sending storage events to child frames we can do it; but its not exactly urgent. #4 This is a test error - I've filed a bug with w3c ... so I'm closing the issue,I've fixed the engine.js error - this was caused by trying to delete prefs that throw a NO_MODIFICATION_ALLOWED_ERR . However the test case itself seems to be wrong as it expects cleared prefs to be === Null rather than typeof 'undefined'.,Current test results (0.9.2 rev 1199782) show mostly green; the following red: 1 Test preferences_attrreadonly failed because preferences in window.widget is not read-only 2 Test return-emtpy-strings failed because one of the attributes returned an incorrect value 3 Test did not run or storage event was never fired. 4 Test au failed because the values of the stored preferences were not what they should have been. #1 is because the preferences attribute itself is not read-only #2 is because we always generate an ID for a widget; even if it doesn't have one by default. #3 is a bit of a strange one to implement I'm not sure what causes the problem with #4; but it throws an engine.js error.,,,
27659,,,,,,,,Closing as FIXED,,,,,,,,,,,,,
2463,x,,,,,,,Added a couple small points I missed before; and fixed (I hope) some formatting. Thanks. If anyone notices any misuses of the document formatting please let me know. Thanks!,,,,,,,,,,,,,
12298,x,,,,,,,The issue is very old. Can you please confirm it with the latest CVS source cut ? Thanks!,,,,,,,,,,,,,
67087,,,,,,,,resolved,,,,,,,,,,,,,
63758,,,,,,,,Committed revision 682671. Added an excludes for **/target/ to the patch to make sure the DataImportHandler binaries do not get packaged. Thanks Jeremy!,Quick patch to add contrib/** to the package task. This may be all that is required; but I'm not for sure.,,,,,,,,,,,,
48779,x,,,,,,,Thanks for the issue / steps to resolve. Pretty much did what you said verbatim. (as it worked out on the other regexp issue),,,,,,,,,,,,,
16927,,,,,,,,I'll update the javadoc accordingly.,,,,,,,,,,,,,
65869,,,,,,,,please apply these two patches in the $SMX4.0/runtime/trunk & $SMX4.0/nmr/trunk respectively. As Guillaume's mentioned above: Define a deploymentListener in the filemonitor module. Define a JBI artifactDeployment Listener for dealing with JBI artifact; to transform it to OSGified bundle automatically. With these two little patch; users can put JBI artifact in the deploy folder directly to install & start it.,,,,,,,,,,,,,
9798,,,,,,,,closing this issue.,,,,,,,,,,,,,
50490,,,,,,,,Integrated in tapestry-trunk-freestyle #515 (See [https://builds.apache.org/job/tapestry-trunk-freestyle/515/]) åÊåÊåÊåÊTAP5-1621 - Fixed test joshcanfield : http://svn.apache.org/viewcvs.cgi/?root=Apache-SVN&view=rev&rev=1167447 Files : * /tapestry/tapestry5/trunk/tapestry-ioc/src/test/java/org/apache/tapestry5/ioc/internal/services/TypeCoercerImplTest.java,,,,,,,,,,,,,
14571,,x,,,,,,yay! it should be really really easy (not including the test; I think it's just deleting 6 characters),If time permits; I'm planning to do a backport of some issues for a Struts 2.0 maintainance release. This one would definitely make it into the port.,I agree! Please backport to a 2.0.x release!,Is there any chance this fix could be backported to a 2.0.x release?,Well; in the current code; your change has been made (by me it seems); so how warnings will be printed; but the property setting will continue. I still think this should be handled better; but it should be fine for now since it works the way we want but will just print out warnings in the semi-rare case the result uses the parameters for something they weren't intended for; which at this point; it seems only to be the ServletActionRedirectResult.,The reason exceptions are ignored is result parameters are not always meant to be applied as setters. For example; the redirect results programatically access the parameters and interpret them as parameters to set on the redirect request. Therefore; there is no corresponding setter and OGNL will throw an exception. Certainly; the current implementation is ideal; but just having exceptions thrown is not the solution. Perhaps we let results declare themselves as supporting 'strict' parameter assignments?,I'm habitual...here is the patch with the Struts 2 code formatting rather than my company's formatting. Sorry for the confusion! thanks; aaron,Don't use this one...non standard code formatting.,Patch for project created from project root; includes proposed fix and test case. Proposed fix is simply to call to a more restrictive setProperties() on the OgnlUtils class which prevents exceptions from being thrown during binding. Don't use this one...non standard code formatting. See newest attachment.,If you come up with a proposed fix; please post the patch to this ticket.,,,,
38291,,,,,,,,I should have marked this resolved back in September.,,,,,,,,,,,,,
45835,,,,,,,,Integrated in Thrift #407 (See https://builds.apache.org/job/Thrift/407/) THRIFT-1517 TTransport.ReadAll() should set exception type to EndOfFile Patch: Stefan Gmeiner (Revision 1291039) Result = SUCCESS roger : http://svn.apache.org/viewvc/?view=rev&rev=1291039 Files : /thrift/trunk/lib/csharp/src/Transport/TTransport.cs,,,,,,,,,,,,,
58874,,,,,,,,Committing to https://svn.apache.org/repos/asf/mina/sshd/trunk ... M sshd-core/src/main/java/org/apache/sshd/client/UserAuth.java M sshd-core/src/main/java/org/apache/sshd/client/auth/UserAuthAgent.java M sshd-core/src/main/java/org/apache/sshd/client/auth/UserAuthPassword.java M sshd-core/src/main/java/org/apache/sshd/client/auth/UserAuthPublicKey.java M sshd-core/src/main/java/org/apache/sshd/client/session/ClientSessionImpl.java M sshd-core/src/main/java/org/apache/sshd/common/Session.java M sshd-core/src/main/java/org/apache/sshd/common/session/AbstractSession.java M sshd-core/src/main/java/org/apache/sshd/server/FileSystemFactory.java M sshd-core/src/main/java/org/apache/sshd/server/FileSystemView.java M sshd-core/src/main/java/org/apache/sshd/server/channel/ChannelSession.java M sshd-core/src/main/java/org/apache/sshd/server/command/ScpCommand.java M sshd-core/src/main/java/org/apache/sshd/server/filesystem/NativeFileSystemFactory.java M sshd-core/src/main/java/org/apache/sshd/server/filesystem/NativeFileSystemView.java M sshd-core/src/main/java/org/apache/sshd/server/session/ServerSession.java Committed r1039541,This patch adds support for the Virtual Filesystem for SCP and allowd information exchange between the authenticator and the filesystem,Sorry; I forgot the tests...I will submit a new patch,This patch adds the requested changes.,,,,,,,,,,
14704,,,,,,,,This has been committed in XWork and will be part of the XWork 2.1 release. See: http://jira.opensymphony.com/browse/XW-541,,,,,,,,,,,,,
64751,x,,,,,,,Thanks for the patch JÌ_rgen. Revision 1028760.,Of course setting this specific import to optional is a good idea - sorry; forgot that!,Thanks for the update JÌ_rgen. Anyway; I prefer to set the import package as optional in Jetty bundle pom. I'm gonna make some tests and keep you posted. Regards JB,Added import for manifest,,,,,,,,,,
41195,x,,,,,,,Thanks to Hazem Saleh for provide us this enhancement fixed at revision 655653,The patch!!!,,,,,,,,,,,,
19946,,,,,,,,Is there any documentation such as 'getting started with swarm' available? If there is; could you share links? Thanks.,,,,,,,,,,,,,
75490,,,,,,,,Ok; since you have a workaround I will close this.,I am using Sun Java 1.6.0_11 on Windows XP x86-32 bit Service Pack 3 + all current patches. It turns out that the class was already final in 1.4.1. Further debugging revealed that putting the xml-sec 1.4.2 jar file on the Java endorsed path resolved the issue. Specifically the problem was that the class org.jcp.xml.dsig.internal.dom.DOMHMACSignatureMethod contains inner classes in 1.4.2 which are not in the version shipped in the Sun Java 1.6.0_11 rt.jar.,Unfortunately; the change to make XMLSignature a final class does break any existing subclasses. But this is the first case I have heard of an issue. So a question for you is why do you need to subclass it?,,,,,,,,,,,
52597,x,,,,,,,thanks Malith for your contribution...patch committed under rev. 1326522,,,,,,,,,,,,,
15073,,,,,,,,duplicate of WW-1598,,,,,,,,,,,,,
14849,,,,,,,,Reporter asked for this to be closed.,,,,,,,,,,,,,
54763,,,,,,,,Fixed.,,,,,,,,,,,,,
31087,x,,,,,,,Patch applied. Thanks Florian.,,,,,,,,,,,,,
44873,,,,,,x,,This has been fixed for 1.1 by Upgading to POI 3.8 beta 5. Perhaps somebody with more power than me can mark this accordingly.,,,,,,,,,,,,,
57286,,,,,x,,,Not quite 100% done. Will finish in 4.2.2.,Changes in rev. 642015 merged in 4.2.x branch thus: http://svn.apache.org/viewvc?view=rev&revision=648752,Thanks. I'm still working on a patch for rw_tmpnam().,I verified that the changes made didn't break the fix to STDCXX-421. the testcase: export TMPDIR=/build/scottz/tmp; rm -rf $TMPDIR/*; ./exec -t 10 en_IN.UTF-8.sh still function properly.,The POSIX function tempnam doesn't fully specify how the name of the directory is obtained when the dir argument to the function is NULL. All known platforms (AIX; FreeBSD; HP-UX; IRIX; Linux; Solaris; Tru64) implement the following behavior: use the TMPDIR environment variable if it is set to a valid directory; otherwise use the dir argument if it points to a valid directory; otherwise us the P_tmpdir macro if it is defined to a valid directory in <stdio.h>; otherwise use /tmp The P_tmpdir macro is #defined to /tmp on AIX; Linux and Tru64 UNIX; and to /var/tmp on FreeBSD; HP-UX; Solaris; and IRIX.,See the following post(s) for proposed patches and a discussion: http://www.nabble.com/STDCXX-401-tt15967805.html http://www.nabble.com/-PATCH--STDCXX-401-part-2-tt15990851.html,The POSIX variable is actually TMPDIR _x0089_ÛÒ see http://www.opengroup.org/onlinepubs/009695399/basedefs/xbd_chap08.html#tag_08_03 Scheduled for sometime after 4.2.,Lowered priority.,,,,,,
46068,,,,x,,,,Integrated in Thrift #230 (See https://builds.apache.org/job/Thrift/230/) THRIFT-1284. cpp: fix processor inheritance Don't make processors that have a proper parent class also inherit from TProcessor. Patch: Adam Simpkins bryanduxbury : http://svn.apache.org/viewvc/?view=rev&rev=1160933 Files : /thrift/trunk/compiler/cpp/src/generate/t_cpp_generator.cc,I just committed this.,,,,,,,,,,,,
57316,,,,,,,,Fixed with the referenced change.,,,,,,,,,,,,,
409,,,,,,,,I'm backporting this to 3.4 and 3.3 branches. --Michi,,,,,,,,,,,,,
60817,,,,,,,,removing fixVersion=4.0 since there is no evidence that anyone is currently working on this issue. (this can certainly be revisited if volunteers step forward),,,,,,,,,,,,,
15793,,,,,,,,This has been fixed in CVS. You can get the latest xwork.jar (which fixes the problem) from http://ivyrep.opensymphony.com,,,,,,,,,,,,,
5491,,,,,,,,reg_name has been accepted as valid URI syntax since Xerces 2.6.0. This may change in the future if XML Schema 1.0 moves up to the RFC 3986 syntax which excludes this production. Xerces CVS currently supports the XML Schema 1.0; 2nd edition which still references RFC 2396 for the anyURI type. The version of XML Schema 1.0 supported will be clearly marked in the documentation. The relevant RFCs for anyURI may be emphasized in a FAQ.,Interesting - you guys are doing a great job. I raised the issue against 2.5 because that is what Stylus Studio ships with. Given the comment from Roy Fielding its a shame that the Digital Radio Mondiale team who wrote ETSI TS 102 821 didn't register their URI schema. In fact this URI schema has some practical problems and it being esentially deprecated by RFC 3986 is an argument I can use to try and get it changed. Luckily Annex C is informative; not normative. I will try and get the ETSI spec changed and definately not incorporate the deprecated URI in the XML schema we are designing. We have a Digital Radio Mondiale meeting next week where I should be able to get this going. I think XERCES should follow (and track) the W3C standard so the current 2.6 behaviour is correct; the 2.5 behaviour is incorrect and if W3C changes the schema spec to reference 3986 then XERCES should change with it. As far as this bug is concerned it doesn't seem like you need to implement anything but it would be nice if the exact syntax accepted by the tool was somewhere in the user documentation (if it is then my mistake but I couldn't find it by googling). Julian,Just to clarify... The report was opened against Xerces 2.5.0. Xerces has allowed the reg_name syntax since Xerces 2.6.0; so as of today the schema validator will accept dcp.tcp.pft://192.168.0.1:1002:3002?fec=1&crc=0 as a valid value of type anyURI.,Roy Fielding has confirmed that this was a deliberate decision; and is indeed an incompatibility between 2396 and 3986. According to him; 'No URI schemes were defined using the reg_name syntax of 2396; and therefore it was removed.' Probably; nobody should be using such syntax now. What to do now? This is a tough call; but I tend to fall back on the letter of the law (or the spec). The schemas spec references 2396; not 3986. Therefore Xerces should be changed to allow this syntax. This might change in schema 1.1 though; which will likely reference 3986; not 2396. However; the current working draft still references RFC 2396. I've asked the schema working group to consider this issue.,The colon isn't the only issue. The @ sign is also prohibited in reg-names in 3986 and allowed in 2396. I wonder what the working group was thinking? I suspect they were trying to make it easier to distinguish reg-names from host-based authorities; and allow user info and port to be specified for registry based authorities. This particular issue is not listed in Appendix D2 of 3986; Modifications; so I wonder if the working group noticed it?,RFC 3986 does seem to prohibit this URI. In 3986 we have: åÊåÊåÊreg-name = *( unreserved / pct-encoded / sub-delims ) åÊåÊåÊunreserved = ALPHA / DIGIT / '-' / '.' / '_' / '~' åÊåÊåÊsub-delims = '!' / '$' / '&' / ''' / '(' / ')' åÊåÊåÊåÊåÊåÊåÊåÊåÊåÊåÊåÊåÊåÊåÊåÊåÊ/ '*' / '+' / ';' / ';' / '=' In 3986 the colon is a general delimiter; not a sub delimiter. I'm not sure what should be done here. Schemas Part 2 normatively references 2396; not 3986; so I suppose this should be allowed. On the other hand; I can't help but think that this is really a bug in the definition of reg-names in 2396.,The value space for anyURI [1] is defined by RFC 2396 (and RFC 2732). dcp.tcp.pft://192.168.0.1:1002:3002?fec=1&crc=0 is allowed by the grammar since '192.168.0.1:1002:3002' matches reg_name. Registry-based Naming Authority (reg_name) has been supported since Xerces 2.6.0. authority = server | reg_name reg_name = 1*( unreserved | escaped | '$' | ';' | åÊåÊåÊåÊåÊåÊåÊåÊåÊåÊåÊåÊåÊåÊåÊåÊ';' | ':' | '@' | '&' | '=' | '+' ) unreserved = alphanum | mark mark = '-' | '_' | '.' | '!' | '~' | '*' | ''' | åÊåÊåÊåÊåÊåÊåÊåÊåÊåÊåÊåÊåÊåÊåÊåÊ'(' | ')' If RFC 3986 prohibits this URI then it seems the new RFC is not backwards compatible with RFC 2396. [1] http://www.w3.org/TR/2004/REC-xmlschema-2-20041028/#anyURI,Xerces is correct. This URI is syntactically incorrect according to RFC 3986. The authority component cannot have two colons when used with an IPv4 literal address. In essence; this URI tries to have two ports. I'm not familiar with the spoec you reference; but it does not appear to be conformant to the URI specification.,,,,,,
58877,,,,,,,,I haven't seen any bad behavior. I was using open ssh to test this. I used the escape character; ~; and the period character; .; with open ssh to disconnect; '~.'.,,,,,,,,,,,,,
14387,,,,,,,,we're moving away from dojo integration in struts2; so you won't likely get much traction on this issue. If you want/need this resolved; then reopen; but provide a patch that we can apply. The core devs aren't going to allocate time to the dojo plugin at this point.,,,,,,,,,,,,,
22691,,,,,,,,By the way; the javadoc for the minimum and maximum validators are still not updated (and incorrect). They need to be precise as to whether or not the endpoints are included. For example: * Gets a Double maximum validator for checking if an number is smaller than the given maximum Should read 'is at most' or 'smaller than or equal to'. Same with the other validators (including the range validators).,,,,,,,,,,,,,
4223,,,,,,,,Updated in 1.2 branch. David; please download and try 1.2 beta when it is released in a week or so.,,,,,,,,,,,,,
10856,,,,,,,,I think with the latest code; this 'pop' message should only show up if an AVT is used with an incorrect value. If AVT's aren't used; the error should be caught statically and you should see the message: Illegal value: sideways used for ENUM attribute: order. Valid values are: ascending descending. Do we have a testcase where the invalid value is in an AVT?,,,,,,,,,,,,,
36376,,,,,x,,,Oops; commit message had wrong ticket number in it; here is the commit: Author: sjiang Date: Fri Mar 19 00:59:56 2010 New Revision: 925063 URL: http://svn.apache.org/viewvc?rev=925063&view=rev Log: TS-260: fix remap filtering and parsing of src_ip Modified: incubator/trafficserver/traffic/trunk/proxy/http2/remap/UrlRewrite.cc Modified: incubator/trafficserver/traffic/trunk/proxy/http2/remap/UrlRewrite.cc URL: http://svn.apache.org/viewvc/incubator/trafficserver/traffic/trunk/proxy/http2/remap/UrlRewrite.cc?rev=925063&r1=925062&r2=925063&view=diff,Fixed previously removed filter implementation to parse src_ip and handle filtering.,,,,,,,,,,,,
49361,,,,,,,,Much cleared exception now .... org.apache.hivemind.ApplicationRuntimeException Component BadInjectComponent/border is not assignable to type org.apache.tapestry.html.Body. location: Annotation @org.apache.tapestry.annotations.InjectComponent(value=border) of public abstract org.apache.tapestry.html.Body pages.BadInjectComponent.getBorder() Stack Trace: åÊåÊåÊåÊ* org.apache.tapestry.TapestryUtils.getComponent(TapestryUtils.java:301) åÊåÊåÊåÊ* $BadInjectComponent_0.finishLoad($BadInjectComponent_0.java) åÊåÊåÊåÊ* org.apache.tapestry.pageload.PageLoader.constructComponent(PageLoader.java:470) åÊåÊåÊåÊ* org.apache.tapestry.pageload.PageLoader.loadPage(PageLoader.java:639) åÊåÊåÊåÊ* $IPageLoader_1066542252f.loadPage($IPageLoader_1066542252f.java) åÊåÊåÊåÊ* $IPageLoader_10665422530.loadPage($IPageLoader_10665422530.java) åÊåÊåÊåÊ* org.apache.tapestry.pageload.PageSource.getPage(PageSource.java:118),Here's the problem; in my HTML template I have: <span jwcid='content@Border'> This is conflicting with: åÊåÊ@InjectComponent('content') åÊåÊpublic abstract Block getContent(); åÊåÊ_$content = (org.apache.tapestry.components.Block) getComponent('content'); It would be nice if Tapestry could help me puzzle this out. I'm picturing a cast check that would report the component id; expected class; actual class and report the location as the location of the @InjectComponent (or should the location be the location of the <span>?),First trick of enhancement problems; enable debugging by updating log4j.properties: log4j.category.tapestry.enhance.ComponentConstructorFactory=debug Now I can see the generated class: ComponentConstructorFactory [DEBUG] Creating class: ClassFab[ public class $ReportInfo_26 extends com.vaisala.ww.ui.pages.report.ReportInfo åÊåÊimplements org.apache.tapestry.event.PageDetachListener private org.apache.tapestry.form.IFormComponent _$tallNoField; private org.apache.tapestry.form.IFormComponent _$otherField; private org.apache.tapestry.form.IFormComponent _$otherDetailField; private com.vaisala.ww.ui.data.UserIdentity _$userIdentity; private org.apache.tapestry.engine.state.ApplicationStateManager _$applicationStateManager; private com.vaisala.ww.ui.data.ReportProposal _$proposal; private com.vaisala.ww.ui.services.ReportProposalMapURLFactory _$mapFactory; private org.apache.tapestry.components.Block _$content; private org.apache.tapestry.services.ComponentMessagesSource _$componentMessagesSource; private org.apache.hivemind.Messages _$messages; private org.apache.tapestry.spec.IComponentSpecification _$specification; private boolean _$tallNo; private boolean _$tallNo$default; private boolean _$tallYes; private boolean _$tallYes$default; private java.lang.String _$message; private java.lang.String _$message$defaultValue; public $ReportInfo_26(org.apache.tapestry.engine.state.ApplicationStateManager $1; com.vaisala.ww.ui.services.ReportProposalMapURLFactory $2; org.apache.tapestry.services.ComponentMessagesSource $3; org.apache.tapestry.spec.IComponentSpecification $4) { åÊåÊ_$applicationStateManager = $1; åÊåÊ_$mapFactory = $2; åÊåÊ_$componentMessagesSource = $3; åÊåÊ_$specification = $4; } public java.lang.String nameAndCompany(java.lang.String $1; java.lang.String $2; java.lang.String $3) { åÊåÊjava.lang.Object[] params = new java.lang.Object[3]; åÊåÊparams[0] = $1; åÊåÊparams[1] = $2; åÊåÊparams[2] = $3; åÊåÊreturn getMessages().format('name-and-company'; params); } public java.lang.String otherIsRequired() { åÊåÊreturn getMessages().getMessage('other-is-required'); } public java.lang.String getNavigationTitle() { åÊåÊreturn getMessages().getMessage('nav-title'); } public void setUserIdentity(com.vaisala.ww.ui.data.UserIdentity $1) { åÊåÊ_$applicationStateManager.store('userIdentity'; $1); åÊåÊ_$userIdentity = $1; } public boolean isTallYes() return _$tallYes; public java.lang.String formWasCancelled() { åÊåÊreturn getMessages().getMessage('form-was-cancelled'); } public com.vaisala.ww.ui.services.ReportProposalMapURLFactory getMapFactory() return _$mapFactory; public org.apache.tapestry.form.IFormComponent getOtherField() return _$otherField; public void setProposal(com.vaisala.ww.ui.data.ReportProposal $1) { åÊåÊ_$applicationStateManager.store('reportProposal'; $1); åÊåÊ_$proposal = $1; } public boolean isTallNo() return _$tallNo; public void setTallYes(boolean $1) { åÊåÊorg.apache.tapestry.Tapestry#fireObservedChange(this; 'tallYes'; ($w) $1); åÊåÊ_$tallYes = $1; } public com.vaisala.ww.ui.data.ReportProposal getProposal() { åÊåÊif (_$proposal == null) åÊåÊåÊåÊ_$proposal = (com.vaisala.ww.ui.data.ReportProposal) _$applicationStateManager.get('reportProposal'); åÊåÊreturn _$proposal; } public org.apache.tapestry.form.IFormComponent getTallNoField() return _$tallNoField; public org.apache.tapestry.valid.IValidationDelegate getDelegate() return (org.apache.tapestry.valid.IValidationDelegate) getBeans().getBean('delegate'); public java.lang.String getMessage() return _$message; public org.apache.tapestry.form.IFormComponent getOtherDetailField() return _$otherDetailField; public com.vaisala.ww.ui.pages.UIMPage getAccountManagement() return (com.vaisala.ww.ui.pages.UIMPage)getPage().getRequestCycle().getPage('account/AccountManagement'); public java.lang.String mustSetTallYesOrNo() { åÊåÊreturn getMessages().getMessage('must-set-tall-yes-or-no'); } public com.vaisala.ww.ui.data.UserIdentity getUserIdentity() { åÊåÊif (_$userIdentity == null) åÊåÊåÊåÊ_$userIdentity = (com.vaisala.ww.ui.data.UserIdentity) _$applicationStateManager.get('userIdentity'); åÊåÊreturn _$userIdentity; } public org.apache.tapestry.spec.IComponentSpecification getSpecification() return _$specification; public void setTallNo(boolean $1) { åÊåÊorg.apache.tapestry.Tapestry#fireObservedChange(this; 'tallNo'; ($w) $1); åÊåÊ_$tallNo = $1; } public java.lang.String yesOrNo() { åÊåÊreturn getMessages().getMessage('yes-or-no'); } public void setMessage(java.lang.String $1) _$message = $1; public void pageDetached(org.apache.tapestry.event.PageEvent $1) { åÊåÊ_$userIdentity = null; åÊåÊ_$proposal = null; åÊåÊ_$tallNo = _$tallNo$default; åÊåÊ_$tallYes = _$tallYes$default; åÊåÊ_$message = _$message$defaultValue; } public org.apache.tapestry.components.Block getContent() return _$content; public org.apache.hivemind.Messages getMessages() { åÊåÊif (_$messages == null) åÊåÊåÊåÊ_$messages = _$componentMessagesSource.getMessages(this); åÊåÊreturn _$messages; } public void finishLoad(org.apache.tapestry.IRequestCycle $1; org.apache.tapestry.engine.IPageLoader $2; org.apache.tapestry.spec.IComponentSpecification $3) { åÊåÊsuper.finishLoad($$); åÊåÊ_$tallNoField = (org.apache.tapestry.form.IFormComponent) getComponent('tallNo'); åÊåÊ_$otherField = (org.apache.tapestry.form.IFormComponent) getComponent('other'); åÊåÊ_$otherDetailField = (org.apache.tapestry.form.IFormComponent) getComponent('otherDetail'); åÊåÊ_$content = (org.apache.tapestry.components.Block) getComponent('content'); åÊåÊ_$tallNo$default = _$tallNo; åÊåÊ_$tallYes$default = _$tallYes; åÊåÊ_$message$defaultValue = _$message; åÊåÊgetPage().addPageDetachListener(this); } ],,,,,,,,,,,
10314,,,,x,,,,First I want to verify that Gretchen's fix >Additional Comments From Gretchen Chiaramonte 2003-09-22 20:04 ------- for this bug works for me as well using Xalan 2.6.0. Second; regarding: >Additional Comments From Igor Hersht 2003-08-12 22:59 ------- ... >If I recall correctly we had such discussion before. >We consider that as a wrong usage. >The correct method would be to create transformer and >to do multiple transformations like >transformer.transform(xmlSource;outputTarget); >transformer.transform(xmlSource;outputTarget); To help clarify what Gretchen has already implied; I believe that this doesn't complete the story. Xalan currently fails unneccessarily if 'xmlSource' is an XMLFilter chain headed by an XML source The XMLFilter chain should be reusable with only the source is refreshed. But at the end of the TransformerImpl.transformNode() call; the DTMManager is erased by the call to XPathContext.reset() as cited by Gretchen. This manager is what binds the XMLFilter to e.g. its stylesheet. Therefore; until this bug is repaired; the filter chain cannot be reused. That's a shame because I suspect that setting up the filter chain (eg reading the stylesheet from disk) is more work than constructing the transformer. In case it isn't obvious; a workaround re-creates the XMLFilter chain each time is it transformed. I did not find this bug report at first. Sorting out why I was getting a NullPointerException was a lot of work; partly because Xalan is built in to the JDK runtime but the 'endorsed' jar files are stored in common/endorsed under tomcat rather than JDK's endorsed (surprise ;-). In addition; Xalan has another bug in DTMManagerDefault.getDTM() (incorrectly returns the null this thread discusses) and one in TransformerImpl.run() (inappropriate throw calls). I will enter these as new bugs.,Additional debugging info: If I comment out the following line in org.apache.xpath.XPathContext.reset() the problem is resolved as well. åÊåÊåÊåÊm_dtmManager = DTMManager.newInstance( åÊåÊåÊåÊåÊåÊåÊåÊåÊåÊåÊåÊåÊåÊåÊåÊåÊåÊåÊorg.apache.xpath.objects.XMLStringFactoryImpl.getFactory()); There is nothing in the documentation for the DTMManager class which indicates that it should be 'recreated' each time a parse is performed...,Serializer serializer = SerializerFactory.getSerializer( åÊåÊåÊåÊåÊåÊåÊåÊåÊåÊåÊåÊåÊåÊåÊåÊåÊåÊåÊOutputPropertiesFactory.getDefaultMethodProperties('xml')); ByteArrayOutputStream result = new ByteArrayOutputStream(); serializer.setOutputStream(result); serializer.reset(); After performing the above; any attempt to use serializer results in the same NullPointerException. The reason I believe it is the same error is that when I commented out the m_xcontext.reset(); line in TransformerImpl.reset(); this problem was resolved as well. Sorry it took me so long to respond...for some reason I never got an email when you appended this request...likely because I was out of the office; and had already received one update when the priority was changed...,Gretchen; in your note you said ' ... making an attempt to do a reset() on a Serializer object causes the exact same symptoms.' Can you give a sample testcase for this please? Is this a SerializationHandler object your are writing about; like ToXMLStream ? I have put some code in the family of serializers in org.apache.xml.serializer to make this work. This may be a separate bug from the XMLFilter problem you are having. Regards; Brian Minchau,Please note my second comment that even making an attempt to do a reset() on a Serializer object causes the exact same symptoms. Why is there a reset() method on the Serializer object if it cannot be used? Additionally; the XMLReader() documentation EXPLICITLY states that it can be reused; and XMLFilter inherits from this object. If the parent can be reused; the child should also be re-usable.,As far as I understand the problem is about multiple transformations from the same xmlFilter. The exception could be repro if we add one line to UseXMLFilters example xmlFilter3.parse(new InputSource('foo.xml')); +xmlFilter3.parse(new InputSource('foo.xml')); If I recall correctly we had such discussion before. We consider that as a wrong usage. The correct method would be to create transformer and to do multiple transformations like transformer.transform(xmlSource;outputTarget); transformer.transform(xmlSource;outputTarget); I will verify if my understanding is correct. In any case our documentation should be better. åÊåÊåÊåÊåÊåÊåÊåÊ,I would like to add that I get exactly the same symptoms when I try to do a reset() on my Serializer after it has been set as the ContentHandler for my XMLFilter. Interestingly; this symptom is also resolved by the patch I suggested above. I think that there is something not quite right in the XPathContext.reset() method; if running it can cause these types of problems...,,,,,,,
57772,,,,,,,,forgott to reslove: Actually this was fixed with http://svn.apache.org/r1459344 (21.March.2013),,,,,,,,,,,,,
